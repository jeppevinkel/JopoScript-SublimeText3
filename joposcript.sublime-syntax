%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: JopoScript
file_extensions:
  - jos
scope: source.joposcript
contexts:
  main:
    - match: '"'
      scope: punctuation.definition.string.begin.joposcript
      push: double_quoted_string

    - match: '//'
      scope: punctuation.definition.comment.joposcript
      push: line_comment

    - match: '\b(ABSOLUTE|ABSTRACT|ALL|AND|AND_THEN|ARRAY|AS|ASM|ATTRIBUTE|BEGIN|BINDABLE|BY|CASE|CLASS|CONST|CONSTRUCTOR|DEFINITION|DESTRUCTOR|DIV|DO|ELSE|ELSIF|END|EXCEPT|EXIT|EXPORT|EXPORTS|EXTERNAL|FAR|FILE|FINALIZATION|FINALLY|FOR|FORWARD|FROM|GOTO|IF|IMPLEMENTATION|IMPORT|IN|INHERITED|INITIALIZATION|INTERFACE|INTERRUPT|IS|LABEL|LIBRARY|LOOP|MOD|MODULE|NAME|NEAR|NIL|NOT|OBJECT|OF|ONLY|OPERATOR|OR|OR_ELSE|OTHERWISE|PACKED|PACKEDSET|POINTER|POW|PRIVATE|PROGRAM|PROPERTY|PROTECTED|PUBLIC|PUBLISHED|QUALIFIED|RECORD|REM|REPEAT|RESIDENT|RESTRICTED|RETRY|RETURN|SEGMENT|SET|SHL|SHR|THEN|TO|TRY|TYPE|UNIT|UNTIL|USES|VALUE|VAR|VIEW|VIRTUAL|WHILE|WITH|XOR)\b'
      scope: keyword.control.joposcript

    - match: '\b(PROCEDURE)\b\s+(\w+(\.\w+)?)'
      scope: meta.function.joposcript
      captures:
        '1': storage.type.function.joposcript
        '2': entity.name.function.joposcript

    # Numbers
    - match: '\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b'
      scope: constant.numeric.joposcript

    - match: '\(\*'
      scope: punctuation.definition.block_comment.joposcript
      push: block_comment

    - match: '\b(ABS|ADDRES|ADR|BITSET|BOOLEAN|BYTE|CAP|CARDINAL|CHAR|STRING|CHR|DEC|DISPOSE|EXCL|FALSE|FLOAT|HALT|HIGH|INC|INCL|INTEGER|LONGCARD|LONGINT|LONGREAL|LONGWORD|NEW|NULLPROC|ODD|ORD|PROC|REAL|SHORTADDR|SHORTCARD|SHORTINT|SIZE|TRUE|TRUNC|VAL|VSIZE|WORD)\b'
      scope: storage.type.joposcript
      captures:
        '1': storage.type.variable.joposcript
        '2': variable.other.joposcript

  double_quoted_string:
    - meta_scope: string.quoted.double.joposcript
    - match: '\\.'
      scope: constant.character.escape.joposcript
    - match: '"'
      scope: punctuation.definition.string.end.joposcript
      pop: true

  line_comment:
    - meta_scope: comment.line.joposcript
    - match: $
      pop: true

  block_comment:
    - meta_scope: comment.block.joposcript
    - match: '\*\)'
      pop: true